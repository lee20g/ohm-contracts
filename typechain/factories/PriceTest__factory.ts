/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PriceTest, PriceTestInterface } from "../PriceTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipPulled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipPushed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bondCalculator_",
        type: "address",
      },
      {
        internalType: "address",
        name: "principle_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "controlVariable",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "debtRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "basePrice",
        type: "uint256",
      },
    ],
    name: "bondPriceInUSDTest",
    outputs: [
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "controlVariable",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "debtRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "basePrice",
        type: "uint256",
      },
    ],
    name: "bondPriceTest",
    outputs: [
      {
        internalType: "uint256",
        name: "price_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "policy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pullManagement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner_",
        type: "address",
      },
    ],
    name: "pushManagement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceManagement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633178082556040516001600160a01b039190911691907fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba908290a361073a806100696000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630505c8c914610067578063089208d81461008b57806346f68ee9146100955780635a96ac0a146100bb5780636515a71f146100c3578063e6c4a79e146100fe575b600080fd5b61006f610140565b604080516001600160a01b039092168252519081900360200190f35b61009361014f565b005b610093600480360360208110156100ab57600080fd5b50356001600160a01b03166101f8565b6100936102f7565b6100ec600480360360608110156100d957600080fd5b50803590602081013590604001356103a1565b60408051918252519081900360200190f35b6100ec600480360360a081101561011457600080fd5b506001600160a01b038135811691602081013590911690604081013590606081013590608001356103cc565b6000546001600160a01b031690565b6000546001600160a01b031633146101ae576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba908390a3600080546001600160a01b0319169055565b6000546001600160a01b03163314610257576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03811661029c5760405162461bcd60e51b815260040180806020018281038252602681526020018061069c6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba91a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146103405760405162461bcd60e51b81526004018080602001828103825260228152602001806106c26022913960400191505060405180910390fd5b600154600080546040516001600160a01b0393841693909116917faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d91a3600154600080546001600160a01b0319166001600160a01b03909216919091179055565b60006103c4629896806103be846103b88888610500565b90610562565b906105bc565b949350505050565b60006001600160a01b038616156104765761046f60646103be886001600160a01b03166332da80a3896040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561043257600080fd5b505afa158015610446573d6000803e3d6000fd5b505050506040513d602081101561045c57600080fd5b50516104698888886103a1565b90610500565b90506104f7565b6104f460646103be876001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156104b757600080fd5b505afa1580156104cb573d6000803e3d6000fd5b505050506040513d60208110156104e157600080fd5b505160ff16600a0a6104698888886103a1565b90505b95945050505050565b60008261050f5750600061055c565b8282028284828161051c57fe5b04146105595760405162461bcd60e51b81526004018080602001828103825260218152602001806106e46021913960400191505060405180910390fd5b90505b92915050565b600082820183811015610559576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600061055983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250600081836106855760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561064a578181015183820152602001610632565b50505050905090810190601f1680156106775780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161069157fe5b049594505050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220213c50a7694454d3b21c5910f9013eb00bd80de8e847267c0eccc91af2f6877b64736f6c63430007050033";

export class PriceTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PriceTest> {
    return super.deploy(overrides || {}) as Promise<PriceTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PriceTest {
    return super.attach(address) as PriceTest;
  }
  connect(signer: Signer): PriceTest__factory {
    return super.connect(signer) as PriceTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceTestInterface {
    return new utils.Interface(_abi) as PriceTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriceTest {
    return new Contract(address, _abi, signerOrProvider) as PriceTest;
  }
}
